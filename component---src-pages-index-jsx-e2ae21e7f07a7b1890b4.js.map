{"version":3,"file":"component---src-pages-index-jsx-e2ae21e7f07a7b1890b4.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/timelyne/plasmic_timelyne.module.css","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/PlasmicButton.module.css","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/icons/PlasmicIcon__Checksvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/icons/PlasmicIcon__Icon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/PlasmicButton.jsx","webpack://gatsby-starter-default/./src/components/Button.jsx","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/PlasmicGlobalVariant__Screen.jsx","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/PlasmicHomepage.module.css","webpack://gatsby-starter-default/./src/components/plasmic/timelyne/PlasmicHomepage.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var a = \"plasmic_timelyne-module--a--afo7q\";\nexport var address = \"plasmic_timelyne-module--address--ik7R+\";\nexport var all = \"plasmic_timelyne-module--all--MD2jA\";\nexport var blockquote = \"plasmic_timelyne-module--blockquote--SIwUF\";\nexport var button = \"plasmic_timelyne-module--button--Bb72N\";\nexport var code = \"plasmic_timelyne-module--code--3pzcR\";\nexport var h1 = \"plasmic_timelyne-module--h1--QutjX\";\nexport var h2 = \"plasmic_timelyne-module--h2--xDObn\";\nexport var h3 = \"plasmic_timelyne-module--h3--mrudr\";\nexport var h4 = \"plasmic_timelyne-module--h4--Dy-Hh\";\nexport var h5 = \"plasmic_timelyne-module--h5--Ngifz\";\nexport var h6 = \"plasmic_timelyne-module--h6--66wFo\";\nexport var img = \"plasmic_timelyne-module--img--nWdZp\";\nexport var input = \"plasmic_timelyne-module--input--8Qp-B\";\nexport var li = \"plasmic_timelyne-module--li--N3D1M\";\nexport var ol = \"plasmic_timelyne-module--ol--abTjD\";\nexport var p = \"plasmic_timelyne-module--p--6l4i9\";\nexport var plasmic_default__a = \"plasmic_timelyne-module--plasmic_default__a--fe-uF\";\nexport var plasmic_default__blockquote = \"plasmic_timelyne-module--plasmic_default__blockquote--a19VN\";\nexport var plasmic_default__code = \"plasmic_timelyne-module--plasmic_default__code--i4wEJ\";\nexport var plasmic_default__component_wrapper = \"plasmic_timelyne-module--plasmic_default__component_wrapper--mB7Eh\";\nexport var plasmic_default__h1 = \"plasmic_timelyne-module--plasmic_default__h1--OlssY\";\nexport var plasmic_default__h2 = \"plasmic_timelyne-module--plasmic_default__h2--tR1ra\";\nexport var plasmic_default__h3 = \"plasmic_timelyne-module--plasmic_default__h3--Khalz\";\nexport var plasmic_default__h4 = \"plasmic_timelyne-module--plasmic_default__h4--deKuZ\";\nexport var plasmic_default__h5 = \"plasmic_timelyne-module--plasmic_default__h5--7aF14\";\nexport var plasmic_default__h6 = \"plasmic_timelyne-module--plasmic_default__h6--PQaiD\";\nexport var plasmic_default__inline = \"plasmic_timelyne-module--plasmic_default__inline--U076w\";\nexport var plasmic_default__ol = \"plasmic_timelyne-module--plasmic_default__ol---rg30\";\nexport var plasmic_default__pre = \"plasmic_timelyne-module--plasmic_default__pre--1BlGQ\";\nexport var plasmic_default__ul = \"plasmic_timelyne-module--plasmic_default__ul--94Zjs\";\nexport var plasmic_default_styles = \"plasmic_timelyne-module--plasmic_default_styles--Hac2O\";\nexport var plasmic_page_wrapper = \"plasmic_timelyne-module--plasmic_page_wrapper--EFRbw\";\nexport var pre = \"plasmic_timelyne-module--pre--oNYI0\";\nexport var root_reset = \"plasmic_timelyne-module--root_reset--rAbsr\";\nexport var select = \"plasmic_timelyne-module--select--uAZ4N\";\nexport var span = \"plasmic_timelyne-module--span--u7Zxw\";\nexport var textarea = \"plasmic_timelyne-module--textarea--JAN2o\";\nexport var ul = \"plasmic_timelyne-module--ul---5sE5\";","// extracted by mini-css-extract-plugin\nexport var __wab_slot = \"PlasmicButton-module--__wab_slot--p0UNX\";\nexport var __wab_slotStringWrapper = \"PlasmicButton-module--__wab_slot-string-wrapper--POgm9\";\nexport var __wab_text = \"PlasmicButton-module--__wab_text--AyEMb\";\nexport var contentContainer = \"PlasmicButton-module--contentContainer--k2MZo\";\nexport var contentContainer___focusVisibleWithin = \"PlasmicButton-module--contentContainer___focusVisibleWithin--XhcY1\";\nexport var endIconContainer = \"PlasmicButton-module--endIconContainer--lrGZz\";\nexport var endIconContainershowEndIcon = \"PlasmicButton-module--endIconContainershowEndIcon--NAQyU\";\nexport var root = \"PlasmicButton-module--root--pxgs4\";\nexport var root___focusVisibleWithin = \"PlasmicButton-module--root___focusVisibleWithin---R0Xm\";\nexport var rootcolor_blue = \"PlasmicButton-module--rootcolor_blue--ZJCfg\";\nexport var rootcolor_clear = \"PlasmicButton-module--rootcolor_clear--NvAAI\";\nexport var rootcolor_green = \"PlasmicButton-module--rootcolor_green--0Hu5z\";\nexport var rootcolor_link = \"PlasmicButton-module--rootcolor_link--BOHjO\";\nexport var rootcolor_red = \"PlasmicButton-module--rootcolor_red--RjCt4\";\nexport var rootcolor_sand = \"PlasmicButton-module--rootcolor_sand--Xmj-E\";\nexport var rootcolor_softBlue = \"PlasmicButton-module--rootcolor_softBlue--9UT3N\";\nexport var rootcolor_softGreen = \"PlasmicButton-module--rootcolor_softGreen--UAwbP\";\nexport var rootcolor_softRed = \"PlasmicButton-module--rootcolor_softRed--w3VEj\";\nexport var rootcolor_softSand = \"PlasmicButton-module--rootcolor_softSand--lBg5z\";\nexport var rootcolor_softYellow = \"PlasmicButton-module--rootcolor_softYellow--Xnivo\";\nexport var rootcolor_white = \"PlasmicButton-module--rootcolor_white--WexaS\";\nexport var rootcolor_yellow = \"PlasmicButton-module--rootcolor_yellow--3PfdZ\";\nexport var rootisDisabled = \"PlasmicButton-module--rootisDisabled--GEwse\";\nexport var rootshape_round = \"PlasmicButton-module--rootshape_round--d9snw\";\nexport var rootshape_round_size_compact = \"PlasmicButton-module--rootshape_round_size_compact--h0qV8\";\nexport var rootshape_rounded = \"PlasmicButton-module--rootshape_rounded--HyvcC\";\nexport var rootshape_rounded_showEndIcon = \"PlasmicButton-module--rootshape_rounded_showEndIcon--kfJ6k\";\nexport var rootshape_rounded_showStartIcon = \"PlasmicButton-module--rootshape_rounded_showStartIcon--jzUeq\";\nexport var rootshape_sharp = \"PlasmicButton-module--rootshape_sharp--wsmue\";\nexport var rootshowEndIcon = \"PlasmicButton-module--rootshowEndIcon--wziTG\";\nexport var rootshowStartIcon = \"PlasmicButton-module--rootshowStartIcon--sg9ns\";\nexport var rootsize_compact = \"PlasmicButton-module--rootsize_compact--YOLyB\";\nexport var rootsize_minimal = \"PlasmicButton-module--rootsize_minimal--1SK6e\";\nexport var slotTargetChildren = \"PlasmicButton-module--slotTargetChildren--iMeJI\";\nexport var slotTargetChildren___focusVisibleWithin = \"PlasmicButton-module--slotTargetChildren___focusVisibleWithin--iC39A\";\nexport var slotTargetChildrencolor_blue = \"PlasmicButton-module--slotTargetChildrencolor_blue--Mo+N9\";\nexport var slotTargetChildrencolor_clear = \"PlasmicButton-module--slotTargetChildrencolor_clear--ZiT24\";\nexport var slotTargetChildrencolor_green = \"PlasmicButton-module--slotTargetChildrencolor_green--vvS33\";\nexport var slotTargetChildrencolor_link = \"PlasmicButton-module--slotTargetChildrencolor_link--j7lg9\";\nexport var slotTargetChildrencolor_red = \"PlasmicButton-module--slotTargetChildrencolor_red--KNWei\";\nexport var slotTargetChildrencolor_sand = \"PlasmicButton-module--slotTargetChildrencolor_sand--XFepj\";\nexport var slotTargetChildrencolor_softBlue = \"PlasmicButton-module--slotTargetChildrencolor_softBlue--9UcwU\";\nexport var slotTargetChildrencolor_softGreen = \"PlasmicButton-module--slotTargetChildrencolor_softGreen--ddhyC\";\nexport var slotTargetChildrencolor_softRed = \"PlasmicButton-module--slotTargetChildrencolor_softRed--hsjZk\";\nexport var slotTargetChildrencolor_softSand = \"PlasmicButton-module--slotTargetChildrencolor_softSand--u5am+\";\nexport var slotTargetChildrencolor_softYellow = \"PlasmicButton-module--slotTargetChildrencolor_softYellow--NLa6o\";\nexport var slotTargetChildrencolor_white = \"PlasmicButton-module--slotTargetChildrencolor_white--zvGgX\";\nexport var slotTargetChildrencolor_yellow = \"PlasmicButton-module--slotTargetChildrencolor_yellow--kCyV4\";\nexport var slotTargetEndIcon = \"PlasmicButton-module--slotTargetEndIcon--hNSaJ\";\nexport var slotTargetEndIconcolor_clear = \"PlasmicButton-module--slotTargetEndIconcolor_clear--z2Atc\";\nexport var slotTargetEndIconcolor_link = \"PlasmicButton-module--slotTargetEndIconcolor_link--c7Oej\";\nexport var slotTargetEndIconcolor_softBlue = \"PlasmicButton-module--slotTargetEndIconcolor_softBlue--PsLjW\";\nexport var slotTargetEndIconcolor_softGreen = \"PlasmicButton-module--slotTargetEndIconcolor_softGreen--Puv26\";\nexport var slotTargetEndIconcolor_softRed = \"PlasmicButton-module--slotTargetEndIconcolor_softRed--2kjOE\";\nexport var slotTargetEndIconcolor_softSand = \"PlasmicButton-module--slotTargetEndIconcolor_softSand--oHaOP\";\nexport var slotTargetEndIconcolor_softYellow = \"PlasmicButton-module--slotTargetEndIconcolor_softYellow--DNDlH\";\nexport var slotTargetEndIconcolor_white = \"PlasmicButton-module--slotTargetEndIconcolor_white--jXzKw\";\nexport var slotTargetEndIconcolor_yellow = \"PlasmicButton-module--slotTargetEndIconcolor_yellow--792d1\";\nexport var slotTargetStartIcon = \"PlasmicButton-module--slotTargetStartIcon--XR0V3\";\nexport var slotTargetStartIconcolor_clear = \"PlasmicButton-module--slotTargetStartIconcolor_clear--r3vGs\";\nexport var slotTargetStartIconcolor_link = \"PlasmicButton-module--slotTargetStartIconcolor_link--RAvag\";\nexport var slotTargetStartIconcolor_softBlue = \"PlasmicButton-module--slotTargetStartIconcolor_softBlue--1ZeKX\";\nexport var slotTargetStartIconcolor_softGreen = \"PlasmicButton-module--slotTargetStartIconcolor_softGreen--yGtHv\";\nexport var slotTargetStartIconcolor_softRed = \"PlasmicButton-module--slotTargetStartIconcolor_softRed--7IrMD\";\nexport var slotTargetStartIconcolor_softSand = \"PlasmicButton-module--slotTargetStartIconcolor_softSand--5VEQC\";\nexport var slotTargetStartIconcolor_softYellow = \"PlasmicButton-module--slotTargetStartIconcolor_softYellow--RtVC+\";\nexport var slotTargetStartIconcolor_white = \"PlasmicButton-module--slotTargetStartIconcolor_white--9Lg8f\";\nexport var slotTargetStartIconcolor_yellow = \"PlasmicButton-module--slotTargetStartIconcolor_yellow--2sijS\";\nexport var startIconContainer = \"PlasmicButton-module--startIconContainer--bvSgX\";\nexport var startIconContainershowStartIcon = \"PlasmicButton-module--startIconContainershowStartIcon--JW-2s\";\nexport var svg__azoxw = \"PlasmicButton-module--svg__azoxw--mne2a\";\nexport var svg__yewy = \"PlasmicButton-module--svg__yewy--6-hdO\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ChecksvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M18.416 5.876a.75.75 0 01.208 1.04L11.42 17.721a1.75 1.75 0 01-2.871.06l-3.156-4.34a.75.75 0 111.214-.882l3.155 4.339a.25.25 0 00.41-.009l7.204-10.805a.75.75 0 011.04-.208z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default ChecksvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function IconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      stroke={\"currentColor\"}\n      fill={\"currentColor\"}\n      strokeWidth={\"0\"}\n      viewBox={\"0 0 16 16\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        d={\n          \"M1 8a.5.5 0 01.5-.5h11.793l-3.147-3.146a.5.5 0 01.708-.708l4 4a.5.5 0 010 .708l-4 4a.5.5 0 01-.708-.708L13.293 8.5H1.5A.5.5 0 011 8z\"\n        }\n        stroke={\"none\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default IconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 6vWNYa83fUnb1xHLwQwj6w\n// Component: Rnk6lkY_vgm\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_timelyne.module.css\" // plasmic-import: 6vWNYa83fUnb1xHLwQwj6w/projectcss\nimport * as sty from \"./PlasmicButton.module.css\" // plasmic-import: Rnk6lkY_vgm/css\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: jnS_z8IIBmf/icon\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: gzz4LHJ1nAh/icon\n\nexport const PlasmicButton__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"shape\",\n  \"size\",\n  \"color\"\n)\n\nexport const PlasmicButton__ArgProps = new Array(\n  \"children\",\n  \"startIcon\",\n  \"endIcon\",\n  \"link\"\n)\n\nfunction PlasmicButton__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: false,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <p.Stack\n      as={\"button\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.button,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_blue]: hasVariant(variants, \"color\", \"blue\"),\n          [sty.rootcolor_clear]: hasVariant(variants, \"color\", \"clear\"),\n          [sty.rootcolor_green]: hasVariant(variants, \"color\", \"green\"),\n          [sty.rootcolor_link]: hasVariant(variants, \"color\", \"link\"),\n          [sty.rootcolor_red]: hasVariant(variants, \"color\", \"red\"),\n          [sty.rootcolor_sand]: hasVariant(variants, \"color\", \"sand\"),\n          [sty.rootcolor_softBlue]: hasVariant(variants, \"color\", \"softBlue\"),\n          [sty.rootcolor_softGreen]: hasVariant(variants, \"color\", \"softGreen\"),\n          [sty.rootcolor_softRed]: hasVariant(variants, \"color\", \"softRed\"),\n          [sty.rootcolor_softSand]: hasVariant(variants, \"color\", \"softSand\"),\n          [sty.rootcolor_softYellow]: hasVariant(\n            variants,\n            \"color\",\n            \"softYellow\"\n          ),\n\n          [sty.rootcolor_white]: hasVariant(variants, \"color\", \"white\"),\n          [sty.rootcolor_yellow]: hasVariant(variants, \"color\", \"yellow\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootshape_round]: hasVariant(variants, \"shape\", \"round\"),\n          [sty.rootshape_round_size_compact]:\n            hasVariant(variants, \"shape\", \"round\") &&\n            hasVariant(variants, \"size\", \"compact\"),\n          [sty.rootshape_rounded]: hasVariant(variants, \"shape\", \"rounded\"),\n          [sty.rootshape_rounded_showEndIcon]:\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\") &&\n            hasVariant(variants, \"shape\", \"rounded\"),\n          [sty.rootshape_rounded_showStartIcon]:\n            hasVariant(variants, \"shape\", \"rounded\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootshape_sharp]: hasVariant(variants, \"shape\", \"sharp\"),\n          [sty.rootshowEndIcon]: hasVariant(\n            variants,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n\n          [sty.rootshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n\n          [sty.rootsize_compact]: hasVariant(variants, \"size\", \"compact\"),\n          [sty.rootsize_compact_shape_rounded]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"shape\", \"rounded\"),\n          [sty.rootsize_compact_showEndIcon]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootsize_compact_showEndIcon_showStartIcon]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\") &&\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootsize_compact_showStartIcon]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootsize_minimal]: hasVariant(variants, \"size\", \"minimal\"),\n          [sty.rootsize_minimal_color_link]:\n            hasVariant(variants, \"color\", \"link\") &&\n            hasVariant(variants, \"size\", \"minimal\"),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(\n        hasVariant(variants, \"showStartIcon\", \"showStartIcon\") ? true : false\n      ) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainercolor_blue]: hasVariant(\n              variants,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.startIconContainershape_rounded_showStartIcon]:\n              hasVariant(variants, \"shape\", \"rounded\") &&\n              hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__azoxw)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconcolor_blue]: hasVariant(\n                variants,\n                \"color\",\n                \"blue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_clear]: hasVariant(\n                variants,\n                \"color\",\n                \"clear\"\n              ),\n\n              [sty.slotTargetStartIconcolor_link]: hasVariant(\n                variants,\n                \"color\",\n                \"link\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softBlue]: hasVariant(\n                variants,\n                \"color\",\n                \"softBlue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softGreen]: hasVariant(\n                variants,\n                \"color\",\n                \"softGreen\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softRed]: hasVariant(\n                variants,\n                \"color\",\n                \"softRed\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softSand]: hasVariant(\n                variants,\n                \"color\",\n                \"softSand\"\n              ),\n\n              [sty.slotTargetStartIconcolor_softYellow]: hasVariant(\n                variants,\n                \"color\",\n                \"softYellow\"\n              ),\n\n              [sty.slotTargetStartIconcolor_white]: hasVariant(\n                variants,\n                \"color\",\n                \"white\"\n              ),\n\n              [sty.slotTargetStartIconcolor_yellow]: hasVariant(\n                variants,\n                \"color\",\n                \"yellow\"\n              ),\n\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                variants,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <div\n        data-plasmic-name={\"contentContainer\"}\n        data-plasmic-override={overrides.contentContainer}\n        className={classNames(projectcss.all, sty.contentContainer, {\n          [sty.contentContainer___focusVisibleWithin]:\n            triggers.focusVisibleWithin_root,\n          [sty.contentContainerisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.contentContainershape_rounded]: hasVariant(\n            variants,\n            \"shape\",\n            \"rounded\"\n          ),\n\n          [sty.contentContainershowEndIcon]: hasVariant(\n            variants,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n        })}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: \"Button\",\n          value: args.children,\n          className: classNames(sty.slotTargetChildren, {\n            [sty.slotTargetChildren___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.slotTargetChildrencolor_blue]: hasVariant(\n              variants,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.slotTargetChildrencolor_clear]: hasVariant(\n              variants,\n              \"color\",\n              \"clear\"\n            ),\n\n            [sty.slotTargetChildrencolor_green]: hasVariant(\n              variants,\n              \"color\",\n              \"green\"\n            ),\n\n            [sty.slotTargetChildrencolor_link]: hasVariant(\n              variants,\n              \"color\",\n              \"link\"\n            ),\n\n            [sty.slotTargetChildrencolor_red]: hasVariant(\n              variants,\n              \"color\",\n              \"red\"\n            ),\n\n            [sty.slotTargetChildrencolor_sand]: hasVariant(\n              variants,\n              \"color\",\n              \"sand\"\n            ),\n\n            [sty.slotTargetChildrencolor_softBlue]: hasVariant(\n              variants,\n              \"color\",\n              \"softBlue\"\n            ),\n\n            [sty.slotTargetChildrencolor_softGreen]: hasVariant(\n              variants,\n              \"color\",\n              \"softGreen\"\n            ),\n\n            [sty.slotTargetChildrencolor_softRed]: hasVariant(\n              variants,\n              \"color\",\n              \"softRed\"\n            ),\n\n            [sty.slotTargetChildrencolor_softSand]: hasVariant(\n              variants,\n              \"color\",\n              \"softSand\"\n            ),\n\n            [sty.slotTargetChildrencolor_softYellow]: hasVariant(\n              variants,\n              \"color\",\n              \"softYellow\"\n            ),\n\n            [sty.slotTargetChildrencolor_white]: hasVariant(\n              variants,\n              \"color\",\n              \"white\"\n            ),\n\n            [sty.slotTargetChildrencolor_yellow]: hasVariant(\n              variants,\n              \"color\",\n              \"yellow\"\n            ),\n\n            [sty.slotTargetChildrenisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.slotTargetChildrenshape_rounded]: hasVariant(\n              variants,\n              \"shape\",\n              \"rounded\"\n            ),\n\n            [sty.slotTargetChildrenshowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n\n            [sty.slotTargetChildrenshowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n\n            [sty.slotTargetChildrensize_minimal]: hasVariant(\n              variants,\n              \"size\",\n              \"minimal\"\n            ),\n\n            [sty.slotTargetChildrensize_minimal_color_link]:\n              hasVariant(variants, \"color\", \"link\") &&\n              hasVariant(variants, \"size\", \"minimal\"),\n          }),\n        })}\n      </div>\n\n      {(hasVariant(variants, \"showEndIcon\", \"showEndIcon\") ? true : false) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainercolor_white]: hasVariant(\n              variants,\n              \"color\",\n              \"white\"\n            ),\n\n            [sty.endIconContainercolor_yellow]: hasVariant(\n              variants,\n              \"color\",\n              \"yellow\"\n            ),\n\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__yewy)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconcolor_clear]: hasVariant(\n                variants,\n                \"color\",\n                \"clear\"\n              ),\n\n              [sty.slotTargetEndIconcolor_link]: hasVariant(\n                variants,\n                \"color\",\n                \"link\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softBlue]: hasVariant(\n                variants,\n                \"color\",\n                \"softBlue\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softGreen]: hasVariant(\n                variants,\n                \"color\",\n                \"softGreen\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softRed]: hasVariant(\n                variants,\n                \"color\",\n                \"softRed\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softSand]: hasVariant(\n                variants,\n                \"color\",\n                \"softSand\"\n              ),\n\n              [sty.slotTargetEndIconcolor_softYellow]: hasVariant(\n                variants,\n                \"color\",\n                \"softYellow\"\n              ),\n\n              [sty.slotTargetEndIconcolor_white]: hasVariant(\n                variants,\n                \"color\",\n                \"white\"\n              ),\n\n              [sty.slotTargetEndIconcolor_yellow]: hasVariant(\n                variants,\n                \"color\",\n                \"yellow\"\n              ),\n\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                variants,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  const b = pp.useButton(\n    PlasmicButton,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      contentSlot: \"children\",\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n    },\n\n    ref\n  )\n\n  if (b.plasmicProps.overrides.root.as === \"a\") {\n    b.plasmicProps.overrides.root.as = p.PlasmicLink\n    b.plasmicProps.overrides.root.props.component = Link\n    b.plasmicProps.overrides.root.props.platform = \"gatsby\"\n  }\n  return b\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"contentContainer\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  contentContainer: [\"contentContainer\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicButton__ArgProps,\n      internalVariantPropNames: PlasmicButton__VariantProps,\n    })\n\n    return PlasmicButton__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicButton\"\n  } else {\n    func.displayName = `PlasmicButton.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicButton = Object.assign(\n  // Top-level PlasmicButton renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    contentContainer: makeNodeComponent(\"contentContainer\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicButton\n    internalVariantProps: PlasmicButton__VariantProps,\n    internalArgProps: PlasmicButton__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicButton\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicButton } from \"./plasmic/timelyne/PlasmicButton\"\n\nfunction Button_(props, ref) {\n  const { plasmicProps } = PlasmicButton.useBehavior(props, ref)\n  return <PlasmicButton {...plasmicProps} />\n}\n\nconst Button = React.forwardRef(Button_)\n\nexport default Object.assign(Button, {\n  __plumeType: \"button\",\n})\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\n\nexport const ScreenContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n/**\n *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n *  automatically included in your components. Please remove this provider\n *  from your code.\n */\n\nexport function ScreenVariantProvider(props) {\n  console.warn(\n    \"DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.\"\n  )\n  return props.children\n}\n\nexport const useScreenVariants = p.createUseScreenVariants(true, {\n  desktopOnly: \"(min-width:768px)\",\n})\n\nexport default ScreenContext\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicHomepage-module--button--drMP8\";\nexport var h2__lYxio = \"PlasmicHomepage-module--h2__lYxio--RzceI\";\nexport var root = \"PlasmicHomepage-module--root--sTDCD\";\nexport var svg___2YHkr = \"PlasmicHomepage-module--svg___2YHkr--9o4M3\";\nexport var svg__aoHa8 = \"PlasmicHomepage-module--svg__aoHa8--Mbxj9\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 6vWNYa83fUnb1xHLwQwj6w\n// Component: X73VYgl5Ildg\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: Rnk6lkY_vgm/component\nimport { useScreenVariants as useScreenVariants_2NLjRmJv2LDoH } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: 2nLJRmJv2lDoH/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_timelyne.module.css\" // plasmic-import: 6vWNYa83fUnb1xHLwQwj6w/projectcss\nimport * as sty from \"./PlasmicHomepage.module.css\" // plasmic-import: X73VYgl5Ildg/css\n\nexport const PlasmicHomepage__VariantProps = new Array()\n\nexport const PlasmicHomepage__ArgProps = new Array()\n\nfunction PlasmicHomepage__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariants_2NLjRmJv2LDoH(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            sty.root\n          )}\n        >\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            shape={\"rounded\"}\n          >\n            <div\n              data-plasmic-name={\"text\"}\n              data-plasmic-override={overrides.text}\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text\n              )}\n            >\n              {hasVariant(globalVariants, \"screen\", \"desktopOnly\") ? (\n                <React.Fragment>\n                  <React.Fragment>{\"\"}</React.Fragment>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__lYxio\n                    )}\n                  >\n                    {\"login to timelyne\"}\n                  </h2>\n                  <React.Fragment>{\"\"}</React.Fragment>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <React.Fragment>{\"\"}</React.Fragment>\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__xk15M\n                    )}\n                  >\n                    <React.Fragment>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                      <h4\n                        data-plasmic-name={\"h4\"}\n                        data-plasmic-override={overrides.h4}\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h4,\n                          projectcss.__wab_text,\n                          sty.h4\n                        )}\n                      >\n                        <React.Fragment>\n                          <React.Fragment>{\"\"}</React.Fragment>\n                          <span\n                            className={\n                              \"plasmic_default__all plasmic_default__span\"\n                            }\n                            style={{ color: \"#0093FD\" }}\n                          >\n                            {\"login to timelyne\"}\n                          </span>\n                          <React.Fragment>{\"\"}</React.Fragment>\n                        </React.Fragment>\n                      </h4>\n                      <React.Fragment>{\"\"}</React.Fragment>\n                    </React.Fragment>\n                  </h2>\n                  <React.Fragment>{\"\"}</React.Fragment>\n                </React.Fragment>\n              )}\n            </div>\n          </Button>\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"button\", \"text\", \"h4\"],\n  button: [\"button\", \"text\", \"h4\"],\n  text: [\"text\", \"h4\"],\n  h4: [\"h4\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomepage__ArgProps,\n      internalVariantPropNames: PlasmicHomepage__VariantProps,\n    })\n\n    return PlasmicHomepage__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomepage\"\n  } else {\n    func.displayName = `PlasmicHomepage.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHomepage = Object.assign(\n  // Top-level PlasmicHomepage renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    button: makeNodeComponent(\"button\"),\n    text: makeNodeComponent(\"text\"),\n    h4: makeNodeComponent(\"h4\"),\n    // Metadata about props expected for PlasmicHomepage\n    internalVariantProps: PlasmicHomepage__VariantProps,\n    internalArgProps: PlasmicHomepage__ArgProps,\n  }\n)\n\nexport default PlasmicHomepage\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHomepage } from \"../components/plasmic/timelyne/PlasmicHomepage\"\n\nfunction Homepage() {\n  // Use PlasmicHomepage to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomepage are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicHomepage is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicHomepage />\n}\n\nexport default Homepage\n"],"names":["h2","h4","plasmic_default_styles","plasmic_page_wrapper","root_reset","contentContainer","contentContainer___focusVisibleWithin","endIconContainer","endIconContainershowEndIcon","root","root___focusVisibleWithin","rootcolor_blue","rootcolor_clear","rootcolor_green","rootcolor_link","rootcolor_red","rootcolor_sand","rootcolor_softBlue","rootcolor_softGreen","rootcolor_softRed","rootcolor_softSand","rootcolor_softYellow","rootcolor_white","rootcolor_yellow","rootisDisabled","rootshape_round","rootshape_round_size_compact","rootshape_rounded","rootshape_rounded_showEndIcon","rootshape_rounded_showStartIcon","rootshape_sharp","rootshowEndIcon","rootshowStartIcon","rootsize_compact","rootsize_minimal","slotTargetChildren","slotTargetChildren___focusVisibleWithin","slotTargetChildrencolor_blue","slotTargetChildrencolor_clear","slotTargetChildrencolor_green","slotTargetChildrencolor_link","slotTargetChildrencolor_red","slotTargetChildrencolor_sand","slotTargetChildrencolor_softBlue","slotTargetChildrencolor_softGreen","slotTargetChildrencolor_softRed","slotTargetChildrencolor_softSand","slotTargetChildrencolor_softYellow","slotTargetChildrencolor_white","slotTargetChildrencolor_yellow","slotTargetEndIcon","slotTargetEndIconcolor_clear","slotTargetEndIconcolor_link","slotTargetEndIconcolor_softBlue","slotTargetEndIconcolor_softGreen","slotTargetEndIconcolor_softRed","slotTargetEndIconcolor_softSand","slotTargetEndIconcolor_softYellow","slotTargetEndIconcolor_white","slotTargetEndIconcolor_yellow","slotTargetStartIcon","slotTargetStartIconcolor_clear","slotTargetStartIconcolor_link","slotTargetStartIconcolor_softBlue","slotTargetStartIconcolor_softGreen","slotTargetStartIconcolor_softRed","slotTargetStartIconcolor_softSand","slotTargetStartIconcolor_softYellow","slotTargetStartIconcolor_white","slotTargetStartIconcolor_yellow","startIconContainer","startIconContainershowStartIcon","svg__azoxw","svg__yewy","props","className","style","title","restProps","xmlns","fill","viewBox","height","width","classNames","fillRule","clipRule","d","stroke","strokeWidth","PlasmicButton__VariantProps","Array","PlasmicButton__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","useTrigger","isTextInput","isRootFocusVisibleWithin","triggerRootFocusVisibleWithinProps","triggers","focusVisibleWithin_root","as","hasGap","projectcss","sty","hasVariant","p","defaultContents","role","value","startIcon","children","endIcon","PlasmicButton__RenderFunc","displayName","PlasmicButton","Object","assign","internalVariantProps","internalArgProps","useBehavior","ref","b","pp","showStartIconVariant","group","variant","showEndIconVariant","isDisabledVariant","contentSlot","startIconSlot","endIconSlot","plasmicProps","component","Link","platform","Button_","Button","React","__plumeType","useScreenVariants","desktopOnly","h2__lYxio","PlasmicHomepage__VariantProps","PlasmicHomepage__ArgProps","button","text","globalVariants","ensureGlobalVariants","screen","useScreenVariants_2NLjRmJv2LDoH","shape","color","PlasmicHomepage__RenderFunc","PlasmicHomepage"],"sourceRoot":""}